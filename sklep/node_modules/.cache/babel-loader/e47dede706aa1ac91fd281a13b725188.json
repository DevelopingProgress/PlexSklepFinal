{"ast":null,"code":"import { CREATE_PRODUCT_FAIL, CREATE_PRODUCT_REQUEST, CREATE_PRODUCT_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS } from \"../constants/productConstants\";\nimport axios from \"axios\";\nexport const listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get('/api/products/' + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: CREATE_PRODUCT_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/products/', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: CREATE_PRODUCT_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_PRODUCT_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/kacpi/OneDrive/Pulpit/PlexSklepFinal/sklep/src/actions/productActions.js"],"names":["CREATE_PRODUCT_FAIL","CREATE_PRODUCT_REQUEST","CREATE_PRODUCT_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","axios","listProducts","dispatch","type","data","get","payload","error","message","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","updateProduct","put","_id","deleteProduct"],"mappings":"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","sourcesContent":["import {\r\n    CREATE_PRODUCT_FAIL,\r\n    CREATE_PRODUCT_REQUEST, CREATE_PRODUCT_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS\r\n} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_LIST_REQUEST});\r\n        const {data} = await axios.get(\"/api/products\");\r\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\r\n    }catch (error) {\r\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n        const { data } = await axios.get('/api/products/' + productId);\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,});\r\n    }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    dispatch({type: CREATE_PRODUCT_REQUEST});\r\n    const {userSignin: { userInfo },} = getState();\r\n    try {\r\n        const { data } = await axios.post('/api/products/', {}, {\r\n                headers: {\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            });\r\n        dispatch({ type: CREATE_PRODUCT_SUCCESS, payload: data.product });\r\n    } catch (error) {\r\n        dispatch({type: CREATE_PRODUCT_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,});\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    dispatch({type: PRODUCT_UPDATE_REQUEST});\r\n    const {userSignin: { userInfo },} = getState();\r\n    try {\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({type: PRODUCT_UPDATE_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,});\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (productId) => async(dispatch, getState) => {\r\n    dispatch({type: PRODUCT_DELETE_REQUEST});\r\n    const {userSignin: { userInfo },} = getState();\r\n    try {\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({type: PRODUCT_DELETE_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message,});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}