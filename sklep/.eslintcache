[{"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\index.js":"1","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\App.js":"2","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\store.js":"3","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\login.js":"4","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\register.js":"5","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\cart.js":"6","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\payment.js":"7","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\address.js":"8","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\product.js":"9","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\profile.js":"10","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\placeorder.js":"11","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\admin.js":"12","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\order.js":"13","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\history.js":"14","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\productlist.js":"15","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\edit.js":"16","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\orderlist.js":"17","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\AdminRoute.js":"18","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\PrivateRoute.js":"19","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\reducers\\cartReducers.js":"20","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\reducers\\userReducers.js":"21","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\reducers\\orderReducers.js":"22","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\reducers\\productReducers.js":"23","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\index.js":"24","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\LoadingBox.js":"25","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\MessageBox.js":"26","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\CheckoutSteps.js":"27","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\LoadingBoxWhite.js":"28","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\actions\\userActions.js":"29","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\actions\\cartActions.js":"30","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\actions\\productActions.js":"31","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\actions\\orderActions.js":"32","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Navbar\\secondaryNavbar.js":"33","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Login\\LoginElements.js":"34","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Sidebar\\secondarySidebar.js":"35","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\constants\\orderConstants.js":"36","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\constants\\userConstants.js":"37","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\constants\\productConstants.js":"38","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\constants\\cartConstants.js":"39","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Navbar\\navbar.js":"40","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Sidebar\\sidebar.js":"41","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\HeroSection\\hero.js":"42","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Services\\services.js":"43","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\InfoSection\\info.js":"44","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\InfoSection\\Data.js":"45","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Footer\\footer.js":"46","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Navbar\\SecondaryNavbarElements.js":"47","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Navbar\\NavbarElements.js":"48","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Sidebar\\SidebarElements.js":"49","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\HeroSection\\HeroElements.js":"50","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\ButtonElement.js":"51","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Services\\ServicesElements.js":"52","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\InfoSection\\InfoElements.js":"53","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Footer\\footerElements.js":"54"},{"size":329,"mtime":1610122583942,"results":"55","hashOfConfig":"56"},{"size":1873,"mtime":1610931513675,"results":"57","hashOfConfig":"56"},{"size":2277,"mtime":1611238793459,"results":"58","hashOfConfig":"56"},{"size":2553,"mtime":1609943421498,"results":"59","hashOfConfig":"56"},{"size":3172,"mtime":1610118619307,"results":"60","hashOfConfig":"56"},{"size":6745,"mtime":1611086111892,"results":"61","hashOfConfig":"56"},{"size":1966,"mtime":1611231749107,"results":"62","hashOfConfig":"56"},{"size":3295,"mtime":1611231687348,"results":"63","hashOfConfig":"56"},{"size":5909,"mtime":1610813337549,"results":"64","hashOfConfig":"56"},{"size":4559,"mtime":1610752453516,"results":"65","hashOfConfig":"56"},{"size":7547,"mtime":1611231793118,"results":"66","hashOfConfig":"56"},{"size":129,"mtime":1610176755191,"results":"67","hashOfConfig":"56"},{"size":9588,"mtime":1611239143773,"results":"68","hashOfConfig":"56"},{"size":2341,"mtime":1610755318186,"results":"69","hashOfConfig":"56"},{"size":4195,"mtime":1610930704981,"results":"70","hashOfConfig":"56"},{"size":7620,"mtime":1610930516054,"results":"71","hashOfConfig":"56"},{"size":3277,"mtime":1611233629629,"results":"72","hashOfConfig":"56"},{"size":487,"mtime":1610176533823,"results":"73","hashOfConfig":"56"},{"size":469,"mtime":1610153224320,"results":"74","hashOfConfig":"56"},{"size":1238,"mtime":1610119914261,"results":"75","hashOfConfig":"56"},{"size":2227,"mtime":1610151260696,"results":"76","hashOfConfig":"56"},{"size":3822,"mtime":1611238767243,"results":"77","hashOfConfig":"56"},{"size":2881,"mtime":1610815005109,"results":"78","hashOfConfig":"56"},{"size":941,"mtime":1610125789343,"results":"79","hashOfConfig":"56"},{"size":210,"mtime":1609886444294,"results":"80","hashOfConfig":"56"},{"size":212,"mtime":1609797403326,"results":"81","hashOfConfig":"56"},{"size":570,"mtime":1609936909522,"results":"82","hashOfConfig":"56"},{"size":224,"mtime":1609973967700,"results":"83","hashOfConfig":"56"},{"size":3215,"mtime":1610929875844,"results":"84","hashOfConfig":"56"},{"size":1198,"mtime":1610120079891,"results":"85","hashOfConfig":"56"},{"size":3245,"mtime":1610814838218,"results":"86","hashOfConfig":"56"},{"size":5308,"mtime":1611238669221,"results":"87","hashOfConfig":"56"},{"size":5237,"mtime":1610929987678,"results":"88","hashOfConfig":"56"},{"size":2363,"mtime":1609943453145,"results":"89","hashOfConfig":"56"},{"size":1698,"mtime":1610120352715,"results":"90","hashOfConfig":"56"},{"size":1437,"mtime":1611238767275,"results":"91","hashOfConfig":"56"},{"size":1844,"mtime":1610147131000,"results":"92","hashOfConfig":"56"},{"size":1128,"mtime":1610814646870,"results":"93","hashOfConfig":"56"},{"size":261,"mtime":1609972338984,"results":"94","hashOfConfig":"56"},{"size":6421,"mtime":1610930072128,"results":"95","hashOfConfig":"56"},{"size":2293,"mtime":1610749699054,"results":"96","hashOfConfig":"56"},{"size":1665,"mtime":1610118619501,"results":"97","hashOfConfig":"56"},{"size":2127,"mtime":1610813014909,"results":"98","hashOfConfig":"56"},{"size":1977,"mtime":1610118619269,"results":"99","hashOfConfig":"56"},{"size":1986,"mtime":1611231338948,"results":"100","hashOfConfig":"56"},{"size":4736,"mtime":1609334694889,"results":"101","hashOfConfig":"56"},{"size":2824,"mtime":1610046949589,"results":"102","hashOfConfig":"56"},{"size":3004,"mtime":1610122932884,"results":"103","hashOfConfig":"56"},{"size":2434,"mtime":1609966562863,"results":"104","hashOfConfig":"56"},{"size":2153,"mtime":1608757068183,"results":"105","hashOfConfig":"56"},{"size":2449,"mtime":1610148720633,"results":"106","hashOfConfig":"56"},{"size":4038,"mtime":1611231153494,"results":"107","hashOfConfig":"56"},{"size":2275,"mtime":1611231406579,"results":"108","hashOfConfig":"56"},{"size":2877,"mtime":1609334738444,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1d7t9mj",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"112"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\index.js",[],["227","228"],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\App.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\store.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\login.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\register.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\cart.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\payment.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\address.js",["229"],"import React from 'react'\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {saveAddress} from \"../actions/cartActions\";\r\nimport {SecondaryNavbar} from \"../components/Navbar/secondaryNavbar\";\r\nrequire('../components/Product/product.css');\r\n\r\nconst AddressPage = (props) => {\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo} = userSignin;\r\n    if(!userInfo) {\r\n        props.history.push(\"/login\");\r\n    }\r\n    const cart = useSelector(state => state.cart);\r\n    const {shippingAddress} = cart;\r\n    const [name, setName] = useState(shippingAddress.name);\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n    const dispatch = useDispatch();\r\n    const redirect = props.location.search ? props.location.search.split('=')[1] : '/';\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(saveAddress({name, address, city, postalCode, country}));\r\n        props.history.push('/payment');\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n            <div className=\"address\">\r\n                <SecondaryNavbar/>\r\n                <br/>\r\n                <CheckoutSteps step1/>\r\n                <form className=\"form\" onSubmit={submitHandler}>\r\n                    <div>\r\n                        <h1>Dane Adresowe</h1>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"name\">Imię i Nazwisko</label>\r\n                        <input type=\"text\" id=\"name\" placeholder=\"Jan Kowalski\" value={name} onChange={event => setName(event.target.value)} required/>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"address\">Adres</label>\r\n                        <input type=\"text\" id=\"address\" placeholder=\"Prosta 2/3\" value={address} onChange={event => setAddress(event.target.value)} required/>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"city\">Miasto</label>\r\n                        <input type=\"text\" id=\"city\" placeholder=\"Warszawa\" value={city} onChange={event => setCity(event.target.value)} required/>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"postalCode\">Kod Pocztowy</label>\r\n                        <input type=\"text\" id=\"postalCode\" placeholder=\"00-001\" value={postalCode} onChange={event => setPostalCode(event.target.value)} required/>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"country\">Kraj</label>\r\n                        <input type=\"text\" id=\"country\" placeholder=\"Polska\" value={country} onChange={event => setCountry(event.target.value)} required/>\r\n                    </div>\r\n                    <div>\r\n                        <label/>\r\n                        <button className=\"primary whitened hoverwhite\" type=\"submit\">Kontynuuj</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default AddressPage\r\n","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\product.js",["230"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { detailsProduct } from '../actions/productActions';\r\nimport MessageBox from '../components/MessageBox';\r\nimport {IoMdArrowRoundBack} from \"react-icons/all\";\r\nimport LoadingBoxWhite from \"../components/LoadingBoxWhite\";\r\nrequire('../components/Product/product.css');\r\n\r\n\r\nexport default function ProductPage(props) {\r\n    const dispatch = useDispatch();\r\n    const productId = props.match.params.id;\r\n    const [qty, setQty] = useState(1);\r\n    const productDetails = useSelector((state) => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    const[isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () =>{\r\n        setIsOpen(!isOpen)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(detailsProduct(productId));\r\n    }, [dispatch, productId]);\r\n\r\n\r\n    const addToCartHandler = () => {\r\n        props.history.push(`/cart/${productId}?qty=${qty}`);\r\n    };\r\n\r\n    return (\r\n\r\n        <div>\r\n            {loading ? (\r\n                <LoadingBoxWhite style={{color: \"#f8f8f8\"}}/>\r\n            ) : error ? (\r\n                <MessageBox variant=\"danger\">{error}</MessageBox>\r\n            ) : (\r\n                <div>\r\n                    <Link to=\"/\"><IoMdArrowRoundBack className=\"arrow hoverarrow\" style={{color:'white'}}/></Link>\r\n                    <div className=\"row top\">\r\n                        <div className=\"col-2\">\r\n                            <img\r\n                                className=\"large\"\r\n                                src={process.env.PUBLIC_URL + product.image}\r\n                                alt={product.name}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"col-1\" style={{margin: '20px'}}>\r\n                            <ul>\r\n                                <li>\r\n                                    <h1>{product.name}</h1>\r\n                                </li>\r\n                                <li>\r\n                                    <h4 style={{color:'white'}}>Opis Produktu:</h4>\r\n                                    <p style={{color:'white'}}>{product.description}</p>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-1\">\r\n                            <div className=\"card card-body\">\r\n                                <ul>\r\n                                    <li>\r\n                                        <div className=\"row\">\r\n                                            <div>Cena</div>\r\n                                            <div className=\"price\">{product.price} zł</div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li>\r\n                                        <div className=\"row\">\r\n                                            <div>Status</div>\r\n                                            <div>\r\n                                                {product.countInStock > 0 ? (\r\n                                                    <span className=\"success\">Produkt Dostępny</span>\r\n                                                ) : (\r\n                                                    <span className=\"danger\">Produkt Niedostępny</span>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    {product.countInStock > 0 && (\r\n                                        <>\r\n                                            <li>\r\n                                                <div className=\"row\">\r\n                                                    <div>Ilość</div>\r\n                                                    <div>\r\n                                                        <select\r\n                                                            value={qty}\r\n                                                            onChange={(e) => setQty(e.target.value)}\r\n                                                        >\r\n                                                            {[...Array(product.countInStock).keys()].map(\r\n                                                                (x) => (\r\n                                                                    <option key={x + 1} value={x + 1}>\r\n                                                                        {x + 1}\r\n                                                                    </option>\r\n                                                                )\r\n                                                            )}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                            <li>\r\n                                                <button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className=\"primary block whitened hoverblack\"\r\n                                                >\r\n                                                    Do Koszyka\r\n                                                </button>\r\n                                            </li>\r\n                                        </>\r\n                                    )}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\profile.js",["231","232"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {listMyOrders} from '../actions/orderActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport {SecondaryNavbar} from \"../components/Navbar/secondaryNavbar\";\r\nimport {detailsUser, updateUserProfile} from \"../actions/userActions\";\r\nimport {\r\n    Form,\r\n    FormContent,\r\n    FormInput,\r\n    FormLabel,\r\n    FormWrap,\r\n} from \"../components/Login/LoginElements\";\r\nimport {useState} from \"react\";\r\nimport {USER_UPDATE_PROFILE_RESET} from \"../constants/userConstants\";\r\n\r\nexport default function ProfilePage(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo} = userSignin;\r\n    const myOrdersList = useSelector(state => state.myOrdersList);\r\n    const {loading, error, orders} = myOrdersList;\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const {loading: userLoading, error: userError, user} = userDetails;\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\r\n    const {success: updateSuccess, error: updateError, loading: updateLoading} = userUpdateProfile;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listMyOrders());\r\n        if (!user) {\r\n            dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n            dispatch(detailsUser(userInfo._id));\r\n        } else {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n        }\r\n    }, [dispatch, userInfo._id, user]);\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            alert('Hasła muszą być takie same!');\r\n        } else {\r\n            dispatch(updateUserProfile({userId: user._id, name, email, password}));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SecondaryNavbar/>\r\n            {\r\n                userLoading ? <LoadingBox/> : userError ? <MessageBox variant=\"danger\">{error}</MessageBox> : (\r\n                    <div style={{marginTop: '20px'}}>\r\n                        {updateLoading && <LoadingBox/>}\r\n                        <FormWrap>\r\n                            <FormContent>\r\n                                <Form onSubmit={submitHandler} action=\"/\">\r\n                                    <h1>Profil Użytkownika</h1>\r\n                                    {updateError && <MessageBox variant=\"danger\">{updateError}</MessageBox>}\r\n                                    {updateSuccess &&\r\n                                    <MessageBox variant=\"success\">Profil został pomyślnie zaktualizowany!</MessageBox>}\r\n                                    <br/>\r\n                                    <FormLabel htmlFor='for'>Imię i Nazwisko</FormLabel>\r\n                                    <FormInput type='text' id=\"name\" placeholder=\"Wprowadź Imię i Nazwisko\" value={name}\r\n                                               onChange={e => setName(e.target.value)}/>\r\n                                    <FormLabel htmlFor='for'>Email</FormLabel>\r\n                                    <FormInput type='text' id=\"email\" placeholder=\"Wprowadź Email\" value={email}\r\n                                               onChange={e => setEmail(e.target.value)}/>\r\n                                    <h1>Zmiana hasła</h1><br/>\r\n                                    <FormLabel htmlFor='for'>Hasło</FormLabel>\r\n                                    <FormInput type='password' id=\"password\" placeholder=\"Wprowadź Hasło\"\r\n                                               onChange={e => setPassword(e.target.value)}/>\r\n                                    <FormLabel htmlFor='for'>Powtórz Hasło</FormLabel>\r\n                                    <FormInput type='password' id=\"confirmPassword\" placeholder=\"Powtórz Hasło\"\r\n                                               onChange={e => setConfirmPassword(e.target.value)}/>\r\n                                    <button type=\"submit\">\r\n                                        Edytuj Profil\r\n                                    </button>\r\n                                </Form>\r\n                            </FormContent>\r\n                        </FormWrap>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>);\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\placeorder.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\admin.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\order.js",["233","234"],"import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport {deliverOrder, detailsOrder, payOrder} from \"../actions/orderActions\";\r\nimport LoadingBoxWhite from \"../components/LoadingBoxWhite\";\r\nimport {SecondaryNavbar} from \"../components/Navbar/secondaryNavbar\";\r\nimport {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {PayPalButton} from \"react-paypal-button-v2\";\r\nimport {ORDER_DELIVER_RESET, ORDER_PAY_RESET} from \"../constants/orderConstants\";\r\n\r\nexport default function OrderPage (props) {\r\n\r\n    const orderId = props.match.params.id;\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n    const orderDetails = useSelector((state) => state.orderDetails);\r\n    const { order, loading, error } = orderDetails;\r\n    const orderPay = useSelector((state) => state.orderPay);\r\n    const { loading: loadingPay, error: errorPay, success: successPay,} = orderPay;\r\n    const orderDeliver = useSelector((state) => state.orderDeliver);\r\n    const { loading: loadingDeliver, error: errorDeliver, success: successDeliver,} = orderDeliver;\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const {userInfo} = userSignin;\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        const addPayPalScript = async () => {\r\n                const { data } = await axios.get('/api/config/paypal');\r\n                const script = document.createElement('script');\r\n                script.type = 'text/javascript';\r\n                script.src = `https://www.paypal.com/sdk/js?client-id=${data}&currency=PLN`;\r\n                script.async = true;\r\n                script.onload = () => {\r\n                    setSdkReady(true);\r\n                };\r\n                document.body.appendChild(script);\r\n        };\r\n        if (!order || successPay || successDeliver || (order && order._id !== orderId)) {\r\n            dispatch({type:ORDER_PAY_RESET});\r\n            dispatch({type:ORDER_DELIVER_RESET});\r\n            dispatch(detailsOrder(orderId));\r\n        } else {\r\n            if (!order.isPaid) {\r\n                if (!window.paypal) {\r\n                    addPayPalScript();\r\n                } else {\r\n                    setSdkReady(true);\r\n                }\r\n            }\r\n        }\r\n    }, [dispatch, orderId, sdkReady, successPay, order, successDeliver]);\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(order, paymentResult));\r\n    }\r\n\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order._id));\r\n    }\r\n\r\n    return loading ? (<LoadingBoxWhite/>) : error ? (<MessageBox variant=\"danger\">{error}</MessageBox>) : (\r\n        <div>\r\n            <SecondaryNavbar/>\r\n            <div className=\"container\">\r\n                <div className=\"row top\">\r\n                    <div className=\"col-2\">\r\n                        <ul>\r\n                            <li>\r\n                                <div className=\"card card-body\">\r\n                                    <h1 style={{marginBottom: '10px', color: 'black'}}>Numer Zamówienia: {order._id}</h1>\r\n                                    <h2>Dostawa</h2>\r\n                                    <p>\r\n                                        <strong>Imię i Nazwisko: </strong> {order.shippingAddress.name} <br/>\r\n                                        <strong>Adres Wysyłki: </strong> {order.shippingAddress.address}, &nbsp;\r\n                                        {order.shippingAddress.city}, &nbsp;\r\n                                        {order.shippingAddress.postalCode}, &nbsp;\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? <MessageBox variant=\"success\">Dostarczono: {order.deliveredAt}</MessageBox>: <MessageBox variant=\"danger\">Zamówienie Niedostarczone</MessageBox>}\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"card card-body\">\r\n                                    <h2>Metoda Płatności</h2>\r\n                                    <p>\r\n                                        {order.paymentMethod} <br/>\r\n                                    </p>\r\n                                    {order.isPaid ? <MessageBox variant=\"success\">Zapłacono: {order.paidAt}</MessageBox>: <MessageBox variant=\"danger\">Zamówienie Nieopłacone</MessageBox>}\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"card card-body\">\r\n                                    <h2>Zamówienie</h2>\r\n                                    <ul>\r\n                                        {order.orderItems.map((item) => (\r\n                                            <li key={item.product}>\r\n                                                <div className=\"row  borderwhite\">\r\n                                                    <div>\r\n                                                        <Link to={`/product/${item.product}`}> <img\r\n                                                            className=\"small hoverbig\"\r\n                                                            src={process.env.PUBLIC_URL + item.image}\r\n                                                            alt={item.name}\r\n                                                        /></Link>\r\n                                                    </div>\r\n                                                    <div className=\"min-30\">\r\n                                                        <h2><Link to={`/product/${item.product}`} className=\"hoverred blacked\" >{item.name}</Link></h2>\r\n                                                    </div>\r\n                                                    <div className=\"blacked\"><p>{item.qty} x {item.price} zł = {item.qty * item.price} zł</p></div>\r\n                                                </div>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-1\">\r\n                        <div className=\"card card-body\">\r\n                            <ul>\r\n                                <li>\r\n                                    <h2>Podsumowanie Zamówienia</h2>\r\n                                </li>\r\n                                <li>\r\n                                        <div className=\"row\">\r\n                                            <div>Suma</div>\r\n                                            <div>{order.itemsPrice.toFixed(2)} zł</div>\r\n                                        </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div className=\"row\">\r\n                                        <div>Koszt Dostawy</div>\r\n                                        <div>{order.shippingPrice.toFixed(2)} zł</div>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div className=\"row\">\r\n                                        <div>VAT</div>\r\n                                        <div>{order.taxPrice.toFixed(2)} zł</div>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div className=\"row\">\r\n                                        <div><strong>Razem</strong></div>\r\n                                        <div><strong> {order.totalPrice.toFixed(2)} zł</strong></div>\r\n                                    </div>\r\n                                </li>\r\n                                {!order.isPaid && (\r\n                                    <li>\r\n                                        {!sdkReady ? (\r\n                                            <LoadingBox/>\r\n                                        ) : (\r\n                                            <div>\r\n                                                {errorPay && (\r\n                                                    <MessageBox variant=\"danger\">{errorPay}</MessageBox>\r\n                                                )}\r\n                                                {loadingPay && <LoadingBox/>}\r\n\r\n                                                <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} currency=\"PLN\"/>\r\n                                            </div>\r\n                                        )}\r\n                                    </li>\r\n                                )}\r\n                                {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <li>\r\n                                        <button type=\"button\" className=\"primary block whitened hoverblack\" onClick={deliverHandler}>Dostarcz Zamówienie</button>\r\n                                    </li>\r\n                                )}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\history.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\productlist.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\edit.js",["235"],"import React from 'react';\r\nimport {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {detailsProduct, updateProduct} from \"../actions/productActions\";\r\nimport LoadingBoxWhite from \"../components/LoadingBoxWhite\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport {SecondaryNavbar} from \"../components/Navbar/secondaryNavbar\";\r\nimport {Icon} from \"../components/Login/LoginElements\";\r\nimport {FaArrowLeft} from \"react-icons/all\";\r\nimport {PRODUCT_UPDATE_RESET} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ProductEditPage(props){\r\n    const productId = props.match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [countInStock, setCountInStock] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [thumbnail, setThumbnail] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const { loading, error, product} = productDetails;\r\n    const productUpdate = useSelector(state => state.productUpdate);\r\n    const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = productUpdate;\r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type: PRODUCT_UPDATE_RESET});\r\n            props.history.push('/productlist');\r\n        }\r\n        if(!product || (product._id !== productId)){\r\n            dispatch(detailsProduct(productId));\r\n        }else {\r\n            setName(product.name);\r\n            setImage(product.image);\r\n            setPrice(product.price);\r\n            setBrand(product.brand);\r\n            setCategory(product.category);\r\n            setCountInStock(product.countInStock);\r\n            setThumbnail(product.thumbnail);\r\n            setDescription(product.description);\r\n        }\r\n\r\n    }, [product, dispatch, productId, successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateProduct({_id: productId, name, image, price, brand, category, countInStock, thumbnail, description}));\r\n    }\r\n\r\n    const [loadingUpload, setLoadingUpload] = useState(false);\r\n    const [errorUpload, setErrorUpload] = useState('');\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo} = userSignin;\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('image', file);\r\n        setLoadingUpload(true);\r\n        try {\r\n            const {data} = await axios.post('/api/uploads', bodyFormData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                }\r\n            });\r\n            setImage(data);\r\n            setLoadingUpload(false);\r\n        } catch (error) {\r\n            setErrorUpload(error.message);\r\n            setLoadingUpload(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid-container\">\r\n            <SecondaryNavbar/>\r\n            <Icon to=\"/productlist\"><FaArrowLeft/></Icon>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h1>Edytuj Produkt {productId}</h1>\r\n                </div>\r\n                {loadingUpdate && <LoadingBoxWhite/>}\r\n                {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n                {loading ? <LoadingBoxWhite/>:\r\n                error ? <MessageBox variant=\"danger\">{error}</MessageBox>:(\r\n                    <>\r\n                        <div>\r\n                            <label htmlFor=\"name\" className=\"whitened\">Nazwa</label>\r\n                            <input type=\"text\" id=\"name\" placeholder=\"Wprowadź Nazwę Przedmiotu\" value={name}\r\n                            onChange={(e) => setName(e.target.value)}/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"image\" className=\"whitened\">Zdjęcie</label>\r\n                            <input type=\"text\" id=\"image\" placeholder=\"Wprowadź Zdjęcie Przedmiotu\" value={image}\r\n                                   onChange={(e) => setImage(e.target.value)}/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"imageFile\" className=\"whitened\">Plik Ze Zdjęciem</label>\r\n                            <input type=\"file\"  id=\"imageFile\" style={{color: 'white'}} aria-label=\"Wybierz Zdjęcie\" onChange={uploadFileHandler}/>\r\n                            {loadingUpload && <LoadingBoxWhite/>}\r\n                            {errorUpload && <MessageBox variant=\"danger\">{errorUpload}</MessageBox>}\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"price\" className=\"whitened\">Cena</label>\r\n                            <input type=\"text\" id=\"price\" placeholder=\"Wprowadź Cenę Przedmiotu\" value={price}\r\n                                   onChange={(e) => setPrice(e.target.value)}/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"brand\" className=\"whitened\">Marka</label>\r\n                            <input type=\"text\" id=\"brand\" placeholder=\"Wprowadź Markę Przedmiotu\" value={brand}\r\n                                   onChange={(e) => setBrand(e.target.value)}/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"category\" className=\"whitened\">Kategoria</label>\r\n                            <input type=\"text\" id=\"category\" placeholder=\"Wprowadź Kategorię Przedmiotu\" value={category}\r\n                                   onChange={(e) => setCategory(e.target.value)}/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"countInStock\" className=\"whitened\">Ilość</label>\r\n                            <input type=\"text\" id=\"countInStock\" placeholder=\"Wprowadź Ilość Przedmiotów\" value={countInStock}\r\n                                   onChange={(e) => setCountInStock(e.target.value)}/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"thumbnail\" className=\"whitened\">Opis Na Stronie Głównej</label>\r\n                            <input type=\"text\" maxLength='75' id=\"thumbnail\" placeholder=\"Wprowadź Opis Przedmiotu Na Stronie Głównej\" value={thumbnail}\r\n                                      onChange={(e) => setThumbnail(e.target.value)}/>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"description\" className=\"whitened\">Opis</label>\r\n                            <textarea rows=\"20\" id=\"description\" placeholder=\"Wprowadź Opis Przedmiotu\" value={description}\r\n                                   onChange={(e) => setDescription(e.target.value)}/>\r\n                        </div>\r\n                        <div>\r\n                            <label/>\r\n                            <button className=\"primary hoverwhite whitened\" type=\"submit\">\r\n                                Zaktualizuj\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\orderlist.js",["236","237"],"import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {deleteOrder, listOrders, orderDelete} from \"../actions/orderActions\";\r\nimport {SecondaryNavbar} from \"../components/Navbar/secondaryNavbar\";\r\nimport LoadingBoxWhite from \"../components/LoadingBoxWhite\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport {deleteProduct} from \"../actions/productActions\";\r\nimport {ORDER_DELETE_RESET} from \"../constants/orderConstants\";\r\n\r\nexport default function OrderListPage(props) {\r\n\r\n    const orderList = useSelector(state => state.orderList);\r\n    const {loading, error, orders} = orderList;\r\n    const deleteOrder = useSelector(state => state.deleteOrder);\r\n    const {loading: loadingDelete, error: errorDelete, success: successDelete} = deleteOrder;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch({type: ORDER_DELETE_RESET});\r\n        dispatch(listOrders());\r\n    }, [dispatch, successDelete]);\r\n\r\n    function deleteHandler(order) {\r\n        if(window.confirm(`Jesteś pawny/a, że chcesz usunąć zamówienie numer ${order._id}?`)){\r\n            dispatch(orderDelete(order._id));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid-container\">\r\n            <SecondaryNavbar/>\r\n            <h1 style={{margin: '10px'}}>Zamówienia</h1>\r\n            {loadingDelete && <LoadingBoxWhite/>}\r\n            {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\r\n            <div>\r\n                {loading ? (<LoadingBoxWhite/>) : error ? (<MessageBox variant=\"danger\">{error}</MessageBox>) : (\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>NUMER</th>\r\n                            <th>EMAIL</th>\r\n                            <th>DATA</th>\r\n                            <th>KWOTA</th>\r\n                            <th>ZAPŁACONE</th>\r\n                            <th>DOSTARCZONE</th>\r\n                            <th>AKCJE</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user.email}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice.toFixed(2)} zł</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : 'Nieopłacone'}</td>\r\n                                <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : 'Niedostarczone'}</td>\r\n                                <td>\r\n                                    <button type=\"button\" className=\"small\" onClick={() => {props.history.push(`/order/${order._id}`);}}>Szczegóły</button>\r\n                                    <button type=\"button\" className=\"small\" onClick={() => deleteHandler(order)}>Usuń</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\AdminRoute.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\PrivateRoute.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\reducers\\cartReducers.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\reducers\\userReducers.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\reducers\\orderReducers.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\reducers\\productReducers.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\pages\\index.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\LoadingBox.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\MessageBox.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\LoadingBoxWhite.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\actions\\userActions.js",["238"],"import {\r\n    USER_DELETE_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n    USER_SIGNIN_FAIL,\r\n    USER_SIGNIN_REQUEST,\r\n    USER_SIGNIN_SUCCESS,\r\n    USER_SIGNOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const signin = (email, password) => async (dispatch) =>{\r\n    dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}});\r\n    try{\r\n        const {data} = await axios.post('/api/users/signin', {email, password});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    }catch (error) {\r\n      dispatch({type: USER_SIGNIN_FAIL, payload: error.response && error.response.data.message ?\r\n      error.response.data.message : error.message});\r\n    }\r\n};\r\n\r\nexport const signout = () => async (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItems');\r\n    localStorage.removeItem('shippingAddress');\r\n    dispatch({type: USER_SIGNOUT});\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) =>{\r\n    dispatch({type: USER_REGISTER_REQUEST, payload: {name,email, password}});\r\n    try{\r\n        const {data} = await axios.post('/api/users/register', {name, email, password});\r\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    }catch (error) {\r\n        dispatch({type: USER_REGISTER_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message});\r\n    }\r\n};\r\n\r\nexport const detailsUser = (userId) => async (dispatch, getState) => {\r\n    dispatch({type: USER_DETAILS_REQUEST, payload: userId});\r\n    const {userSignin: { userInfo },} = getState();\r\n    try{\r\n        const { data } = await axios.get(`/api/users/${userId}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({type: USER_DETAILS_SUCCESS, payload: data});\r\n    }catch (error) {\r\n        dispatch({type: USER_DETAILS_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  dispatch({type: USER_UPDATE_PROFILE_REQUEST, payload: user});\r\n  const {userSignin: { userInfo}} = getState();\r\n  try {\r\n    const {data} = await axios.put(`/api/users/profile`, user, {\r\n        headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n    });\r\n      dispatch({type: USER_UPDATE_PROFILE_SUCCESS, payload: data});\r\n      dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n  }catch (error) {\r\n      dispatch({type: USER_UPDATE_PROFILE_FAIL, payload: error.response && error.response.data.message ?\r\n              error.response.data.message : error.message});\r\n  }\r\n};","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\actions\\cartActions.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\actions\\productActions.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\actions\\orderActions.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Navbar\\secondaryNavbar.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Login\\LoginElements.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Sidebar\\secondarySidebar.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\constants\\orderConstants.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\constants\\userConstants.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\constants\\productConstants.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\constants\\cartConstants.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Navbar\\navbar.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Sidebar\\sidebar.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\HeroSection\\hero.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Services\\services.js",["239","240"],"import React, {useEffect} from 'react'\r\nimport {\r\n    ServicesCard,\r\n    ServicesContainer,\r\n    ServicesH1,\r\n    ServicesH2,\r\n    ServicesP,\r\n    ServicesWrapper,\r\n    ServicesIcon,\r\n    ServicesH3, ServicesBtn, ServicesBtnWrapper\r\n} from \"./ServicesElements\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport {listProducts} from \"../../actions/productActions\";\r\n\r\n\r\n\r\n\r\n\r\nconst Services = () => {\r\n\r\n    const productList = useSelector((state) => state.productList);\r\n    const {products} = productList;\r\n    const dispatch = useDispatch();\r\n    const [qty] = useState(1);\r\n\r\n    useEffect(()=>{\r\n       dispatch(listProducts());\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <ServicesContainer  id=\"products\">\r\n            <ServicesH1>Produkty</ServicesH1>\r\n            <ServicesWrapper>\r\n                {\r\n                    products.map(product => (\r\n                    <ServicesCard key={product._id}>\r\n                            <Link to={`/product/${product._id}`} style={{ textDecoration: 'none' }}>\r\n                                <ServicesIcon src={process.env.PUBLIC_URL + product.image}  alt=\"problem\"/>\r\n                            </Link>\r\n                            <Link to={`/product/${product._id}`} style={{ textDecoration: 'none' }}>\r\n                                <ServicesH2>{product.name}</ServicesH2>\r\n                            </Link>\r\n                        <ServicesP>{product.thumbnail}</ServicesP>\r\n                        <ServicesH3>{product.price.toFixed(2)} zł</ServicesH3>\r\n                        {product.countInStock > 0 ? (\r\n                                <ServicesBtn><Link to={`/cart/${product._id}?qty=${qty}`} style={{ textDecoration: 'none', color: 'white' }}>Do koszyka</Link></ServicesBtn>) :\r\n                            (<ServicesH3 style={{ paddingTop:'30px'}} className=\"danger\">Wyprzedano</ServicesH3>)}\r\n                    </ServicesCard>\r\n                ))\r\n                }\r\n            </ServicesWrapper>\r\n        </ServicesContainer>\r\n\r\n    )\r\n}\r\n\r\nexport default Services\r\n","C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\InfoSection\\info.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\InfoSection\\Data.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Footer\\footer.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Navbar\\SecondaryNavbarElements.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Navbar\\NavbarElements.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Sidebar\\SidebarElements.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\HeroSection\\HeroElements.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\ButtonElement.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Services\\ServicesElements.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\InfoSection\\InfoElements.js",[],"C:\\Users\\kacpi\\OneDrive\\Pulpit\\PlexSklepFinal\\PlexSklepFinal\\sklep\\src\\components\\Footer\\footerElements.js",[],{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":23,"column":11,"nodeType":"247","messageId":"248","endLine":23,"endColumn":19},{"ruleId":"245","severity":1,"message":"249","line":20,"column":11,"nodeType":"247","messageId":"248","endLine":20,"endColumn":17},{"ruleId":"245","severity":1,"message":"250","line":28,"column":12,"nodeType":"247","messageId":"248","endLine":28,"endColumn":19},{"ruleId":"245","severity":1,"message":"251","line":28,"column":28,"nodeType":"247","messageId":"248","endLine":28,"endColumn":34},{"ruleId":"245","severity":1,"message":"252","line":24,"column":22,"nodeType":"247","messageId":"248","endLine":24,"endColumn":36},{"ruleId":"245","severity":1,"message":"253","line":24,"column":45,"nodeType":"247","messageId":"248","endLine":24,"endColumn":57},{"ruleId":"254","severity":1,"message":"255","line":50,"column":8,"nodeType":"256","endLine":50,"endColumn":53,"suggestions":"257"},{"ruleId":"245","severity":1,"message":"258","line":3,"column":9,"nodeType":"247","messageId":"248","endLine":3,"endColumn":20},{"ruleId":"245","severity":1,"message":"259","line":7,"column":9,"nodeType":"247","messageId":"248","endLine":7,"endColumn":22},{"ruleId":"245","severity":1,"message":"260","line":2,"column":5,"nodeType":"247","messageId":"248","endLine":2,"endColumn":24},{"ruleId":"245","severity":1,"message":"261","line":10,"column":30,"nodeType":"247","messageId":"248","endLine":10,"endColumn":48},{"ruleId":"254","severity":1,"message":"262","line":30,"column":8,"nodeType":"256","endLine":30,"endColumn":10,"suggestions":"263"},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"no-unused-vars","'redirect' is assigned a value but never used.","Identifier","unusedVar","'toggle' is assigned a value but never used.","'loading' is assigned a value but never used.","'orders' is assigned a value but never used.","'loadingDeliver' is assigned a value but never used.","'errorDeliver' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["266"],"'deleteOrder' is defined but never used.","'deleteProduct' is defined but never used.","'USER_DELETE_REQUEST' is defined but never used.","'ServicesBtnWrapper' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["267"],"no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},"Update the dependencies array to be: [product, dispatch, productId, successUpdate, props.history]",{"range":"272","text":"273"},"Update the dependencies array to be: [dispatch]",{"range":"274","text":"275"},[2089,2134],"[product, dispatch, productId, successUpdate, props.history]",[727,729],"[dispatch]"]