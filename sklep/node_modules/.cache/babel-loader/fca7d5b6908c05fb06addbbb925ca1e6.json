{"ast":null,"code":"import { USER_DELETE_REQUEST, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => async dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('shippingAddress');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsUser = userId => async dispatch => {\n  dispatch({\n    type: USER_DELETE_REQUEST,\n    payload: userId\n  });\n};","map":{"version":3,"sources":["C:/Users/kacpi/OneDrive/Pulpit/PlexSklepFinal/sklep/src/actions/userActions.js"],"names":["USER_DELETE_REQUEST","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","axios","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signout","removeItem","register","name","detailsUser","userId"],"mappings":"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","sourcesContent":["import {\r\n    USER_DELETE_REQUEST,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n    USER_SIGNIN_FAIL,\r\n    USER_SIGNIN_REQUEST,\r\n    USER_SIGNIN_SUCCESS,\r\n    USER_SIGNOUT\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const signin = (email, password) => async (dispatch) =>{\r\n    dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}});\r\n    try{\r\n        const {data} = await axios.post('/api/users/signin', {email, password});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    }catch (error) {\r\n      dispatch({type: USER_SIGNIN_FAIL, payload: error.response && error.response.data.message ?\r\n      error.response.data.message : error.message});\r\n    }\r\n};\r\n\r\nexport const signout = () => async (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('shippingAddress');\r\n    dispatch({type: USER_SIGNOUT});\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) =>{\r\n    dispatch({type: USER_REGISTER_REQUEST, payload: {name,email, password}});\r\n    try{\r\n        const {data} = await axios.post('/api/users/register', {name, email, password});\r\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    }catch (error) {\r\n        dispatch({type: USER_REGISTER_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message});\r\n    }\r\n};\r\n\r\nexport const detailsUser = (userId) => async (dispatch) => {\r\n    dispatch({type: USER_DELETE_REQUEST, payload: userId});\r\n\r\n};"]},"metadata":{},"sourceType":"module"}