{"ast":null,"code":"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS } from \"../constants/orderConstants\";\nimport axios from \"axios\";\nimport { CART_EMPTY } from \"../constants/cartConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/kacpi/OneDrive/Pulpit/PlexSklepFinal/sklep/src/actions/orderActions.js"],"names":["ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","axios","CART_EMPTY","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","payOrder","paymentResult","ORDER_PAY_REQUEST","Axios","put","_id","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL"],"mappings":"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","sourcesContent":["import {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS\r\n} from \"../constants/orderConstants\";\r\nimport axios from \"axios\";\r\nimport {CART_EMPTY} from \"../constants/cartConstants\";\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\r\n    try {\r\n        const {\r\n            userSignin: { userInfo },\r\n        } = getState();\r\n        const { data } = await axios.post('/api/orders', order, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\r\n        dispatch({ type: CART_EMPTY });\r\n        localStorage.removeItem('cartItems');\r\n    } catch (error) {\r\n        dispatch({ type: ORDER_CREATE_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message,});\r\n    }\r\n};\r\n\r\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await axios.get(`/api/orders/${orderId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message;\r\n        dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\r\n    }\r\n};\r\n\r\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\r\n    const {userSignin: { userInfo },} = getState();\r\n    try {\r\n        const { data } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: ORDER_PAY_FAIL, payload: message });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}