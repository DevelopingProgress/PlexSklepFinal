{"ast":null,"code":"import { USER_DELETE_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => async dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cart');\n  localStorage.removeItem('shippingAddress');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/kacpi/OneDrive/Pulpit/PlexSklepFinal/sklep/src/actions/userActions.js"],"names":["USER_DELETE_REQUEST","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","axios","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signout","removeItem","register","name","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token","updateUserProfile","user","put"],"mappings":"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","sourcesContent":["import {\r\n    USER_DELETE_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n    USER_SIGNIN_FAIL,\r\n    USER_SIGNIN_REQUEST,\r\n    USER_SIGNIN_SUCCESS,\r\n    USER_SIGNOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const signin = (email, password) => async (dispatch) =>{\r\n    dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}});\r\n    try{\r\n        const {data} = await axios.post('/api/users/signin', {email, password});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    }catch (error) {\r\n      dispatch({type: USER_SIGNIN_FAIL, payload: error.response && error.response.data.message ?\r\n      error.response.data.message : error.message});\r\n    }\r\n};\r\n\r\nexport const signout = () => async (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cart');\r\n    localStorage.removeItem('shippingAddress');\r\n    dispatch({type: USER_SIGNOUT});\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) =>{\r\n    dispatch({type: USER_REGISTER_REQUEST, payload: {name,email, password}});\r\n    try{\r\n        const {data} = await axios.post('/api/users/register', {name, email, password});\r\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    }catch (error) {\r\n        dispatch({type: USER_REGISTER_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message});\r\n    }\r\n};\r\n\r\nexport const detailsUser = (userId) => async (dispatch, getState) => {\r\n    dispatch({type: USER_DETAILS_REQUEST, payload: userId});\r\n    const {userSignin: { userInfo },} = getState();\r\n    try{\r\n        const { data } = await axios.get(`/api/users/${userId}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({type: USER_DETAILS_SUCCESS, payload: data});\r\n    }catch (error) {\r\n        dispatch({type: USER_DETAILS_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  dispatch({type: USER_UPDATE_PROFILE_REQUEST, payload: user});\r\n  const {userSignin: { userInfo}} = getState();\r\n  try {\r\n    const {data} = await axios.put(`/api/users/profile`, user, {\r\n        headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n    });\r\n      dispatch({type: USER_UPDATE_PROFILE_SUCCESS, payload: data});\r\n      dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n  }catch (error) {\r\n      dispatch({type: USER_UPDATE_PROFILE_FAIL, payload: error.response && error.response.data.message ?\r\n              error.response.data.message : error.message});\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}