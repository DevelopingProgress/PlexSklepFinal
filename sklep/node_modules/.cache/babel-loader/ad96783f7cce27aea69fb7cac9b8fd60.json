{"ast":null,"code":"import { MY_ORDERS_FAIL, MY_ORDERS_REQUEST, MY_ORDERS_SUCCESS, ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/orderConstants\";\nimport axios from \"axios\";\nimport { CART_EMPTY } from \"../constants/cartConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  dispatch({\n    type: MY_ORDERS_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get('/api/orders/my', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: MY_ORDERS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get('/api/orders', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/kacpi/OneDrive/Pulpit/PlexSklepFinal/sklep/src/actions/orderActions.js"],"names":["MY_ORDERS_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","axios","CART_EMPTY","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","payOrder","paymentResult","put","_id","listMyOrders","listOrders"],"mappings":"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","sourcesContent":["import {\r\n    MY_ORDERS_FAIL,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL,\r\n    ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS\r\n} from \"../constants/orderConstants\";\r\nimport axios from \"axios\";\r\nimport {CART_EMPTY} from \"../constants/cartConstants\";\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\r\n    try {\r\n        const {\r\n            userSignin: { userInfo },\r\n        } = getState();\r\n        const { data } = await axios.post('/api/orders', order, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\r\n        dispatch({ type: CART_EMPTY });\r\n        localStorage.removeItem('cartItems');\r\n    } catch (error) {\r\n        dispatch({ type: ORDER_CREATE_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message,});\r\n    }\r\n};\r\n\r\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await axios.get(`/api/orders/${orderId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message;\r\n        dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\r\n    }\r\n};\r\n\r\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\r\n    const {userSignin: { userInfo },} = getState();\r\n    try {\r\n        const { data } = axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message;\r\n        dispatch({ type: ORDER_PAY_FAIL, payload: message });\r\n    }\r\n};\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    dispatch({ type: MY_ORDERS_REQUEST });\r\n    const {userSignin: { userInfo },} = getState();\r\n    try {\r\n        const { data } = await axios.get('/api/orders/my', {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({ type: MY_ORDERS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message;\r\n        dispatch({ type: MY_ORDERS_FAIL, payload: message });\r\n    }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) =>{\r\n    dispatch({ type: ORDER_LIST_REQUEST });\r\n    const {userSignin: { userInfo },} = getState();\r\n    try {\r\n        const { data } = await axios.get('/api/orders', {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message;\r\n        dispatch({ type: ORDER_LIST_FAIL, payload: message });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}